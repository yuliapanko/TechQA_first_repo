{
	"info": {
		"_postman_id": "b8567b51-a004-45e0-9536-05b37777ac1e",
		"name": "API_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32597203"
	},
	"item": [
		{
			"name": "Add new pet to the store ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, successful operation\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check pet id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1904);",
							"    pm.collectionVariables.set(\"petId\", jsonData.id);",
							"});",
							"",
							"",
							"pm.test(\"Check pet category id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.category.id).to.eql(1);",
							"});",
							"",
							"pm.test(\"Check pet category name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.category.name).to.eql('cat');",
							"});",
							"",
							"pm.test(\"Check pet name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('murka');",
							"});",
							"",
							"pm.test(\"Check pet photoUrls\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.photoUrls[0]).to.eql('string');",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1904,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASEurl}}/pet",
					"host": [
						"{{BASEurl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new pet to the store 4xx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405, Invalid input\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Invalid input');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": www,\r\n  \"categorн\": {\r\n    \"id\": 1,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"murka\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an existing pet ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, successful operation\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check pet tag id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tags[0].id).to.eql(2);",
							"});",
							"",
							"pm.test(\"Check pet tag name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tags[0].name).to.eql(\"fluffy\");",
							"});",
							"",
							"pm.test(\"Check pet status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"available\");",
							"});",
							"",
							"pm.test(\"Check pet  name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"miia\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1904,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"cat\"\r\n  },\r\n  \"name\": \"miia\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"fluffy\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/pet",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an existing pet 4xx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, Invalid ID supplied\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Invalid ID supplied');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": qqq,\r\n  \"category\": {\r\n    \"id\": 678,\r\n    \"name\": \"ttt\"\r\n  },\r\n  \"name\": \"ggg\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, successful operation\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//перевірити чи у всіх такий статус ",
							"pm.test(\"Check status is available\", function () {",
							"    var jsonData = pm.response.json();",
							"    for (var i=0; i<jsonData.length; i++){",
							"    console.log(jsonData[i].status); ",
							"    pm.expect(jsonData[i].status).to.eql(\"available\");",
							"    }  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=available",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by status 4xx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, Invalid status value\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Invalid status value');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=hello",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "hello"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by ID ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, successful operation\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Check pet id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1904);",
							"});",
							"",
							"pm.test(\"Check pet category id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.category.id).to.eql(1);",
							"});",
							"",
							"pm.test(\"Check pet category name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.category.name).to.eql('cat');",
							"});",
							"",
							"pm.test(\"Check pet status\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"available\");",
							"});",
							"",
							"pm.test(\"Check pet name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('miia');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{petId}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by ID  4xx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, Pet not found\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Pet not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/9223372036854775666",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"9223372036854775666"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delets a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, successful operation\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"1904\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "header",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/1904",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"1904"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delets a pet Copy 4xx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, Pet not found\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Pet not found');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/203886",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"203886"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://petstore.swagger.io/v2/"
		},
		{
			"key": "BASEurl",
			"value": "https://petstore.swagger.io/v2"
		},
		{
			"key": "baseURL",
			"value": ""
		},
		{
			"key": "petId",
			"value": ""
		}
	]
}